class Solution {
  public:
  int prec(char c){
      if(c=='^'){
          return 3;
      }
       if(c=='*'|| c=='/'){
          return 2;
      }
       if(c=='+'||c=='-'){
          return 1;
      }
      else{
          return -1;
      }
  }
    // Function to convert an infix expression to a postfix expression.
    string infixToPostfix(string s) {
        // Your code here
     stack<char>st;
     string res;
     for(int i=0;i<s.length();i++){
         if((s[i]>='a'&& s[i]<='z')||(s[i]>='A'&& s[i]<='Z')||(s[i]>='0'&& s[i]<='9')){
             res+=s[i];
         }else if(s[i]=='('){
             st.push('(');
         }else if(s[i]==')'){
             while(!st.empty()&&st.top()!='('){
                 res+=st.top();
                 st.pop();
             }
             if(st.top()=='('){
                 st.pop();
             }
         }
         else{
             while(!st.empty()&&prec(s[i])<=prec(st.top())){
                 res+=st.top(); st.pop();
             }
             st.push(s[i]);
         }
     }
     while(!st.empty()){
         res+=st.top();st.pop();
     }
     return res;
        
    }
};
