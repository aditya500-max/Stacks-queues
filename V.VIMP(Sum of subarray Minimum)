class Solution {
public:
  //based on Montonic stack based concept of Previous Less element & Next lesser element [PLE/ELE]
  //stack is decreasing monotonously from top to bottom
    int sumSubarrayMins(vector<int>& arr) {
        int n=arr.size();
        vector<int>left(n,-1);vector<int>right(n,n);
        stack<int>st;
        long long sum=0;
        long long mod = 1e9 + 7;
        
        //code for PLE
        for(int i=0;i<n;i++){
             while(!st.empty() && arr[st.top()]>=arr[i]){
                st.pop();
             }
             if(!st.empty()){
                left[i]=st.top();
             }
            st.push(i);
        }
        while (!st.empty()){
            st.pop();
        }
        //code for NLE
        for(int i=n-1;i>=0;i--){
             while(!st.empty()&& arr[st.top()]>arr[i]){
               
                st.pop();
             }
             if(!st.empty()){
                right[i]=st.top();
             }
            st.push(i);
        }
        for(int i=0;i<n;i++){
            
             sum+=(i - left[i]) * (right[i] - i)%mod * arr[i] % mod;
             sum=sum%mod;
        }
        return sum;


    }
};
