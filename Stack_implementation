
#include<bits/stdc++.h>
using namespace std;

class Stack{
    //size,top.. are private
    int size;
    int *arr;
    int top;
    public:
    Stack(){
        top=-1;
        size=6;
        arr=new int[size];
        //arr is an array(pointer)with size 1e5 with base memory address pointing to 1st block of array.
        
    }
    //all push,pop,top,size operations are defined inside stack class
    void push(int x){
        if(top>=size-1){
            cout<<"array is full"<<endl; return;
        }
        top++;
        arr[top]=x;
        
    }
    //In pop operation, we just shift our top--, we dont delete 'top', we let that remain as it is.
    void pop(){
        if(top==-1){
            cout<<"No element is present"<<endl; return;
        }
        top--;
    }
    //Note:- Top and top are different
    int Top(){
        if(top==-1){
            cout<<"No element is present"<<endl;
            return -1;
        }
        return arr[top];
    }
    int Size(){
        return top+1;
    }
    bool isEmpty(){
        return top==-1;
    }
};


int main(){
    Stack st;
    st.push(1);
    st.push(2);
    st.push(3);
    st.push(4);
    st.push(5);
    st.push(6);
    cout<<st.Top()<<endl;
    st.pop();
     cout<<st.Top()<<endl;
    st.push(7);
     cout<<st.Top()<<endl;
     cout<<st.Size()<<endl;
    return 0;
 
}
